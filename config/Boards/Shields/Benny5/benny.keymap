/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF_L 0
#define NAV_L 1
#define SYM_L 2
#define NUM_L 3

/* Shortcuts */
#define CUT LC(X)
#define COPY LC(C)
#define PASTE LC(V)
#define UNDO LC(Z)
#define CLONED LS(RA(DOWN))
#define REML LC(FSLH)

&mt {
    flavor = "tap-preferred";    
    tapping-term-ms = <400>;
};


&sk {
    release-after-ms = <2000>;
    quick-release;
};


/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                bt_layer {
                if-layers = <1 2>;
                then-layer = <3>;
                };
        };
        
        combos {
        compatible = "zmk,combos";
        /*                KEY POSITIONS

              0   1   2   3             4   5   6   7
              8   9  10  11  12    13  14  15  16  17
              18 19  20  21  22    23  24  25  26  27
                         28  29    30  31              */

        combo_esc { 
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            };                
        
        combo_ent { /*may change this*/
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp ENTER>;
            };
        
        combo_dash { 
            timeout-ms = <20>;
            key-positions = <19 20>;
            bindings = <&kp MINUS>;
            };

        combo_uscore { 
            timeout-ms = <20>;
            key-positions = <31 32>;
            bindings = <&kp UNDER>;
            };

        combo_V { 
            timeout-ms = <20>;
            key-positions = <15 28>;
            bindings = <&kp V>;
            };

        combo_B { 
            timeout-ms = <20>;
            key-positions = <15 16>;
            bindings = <&kp B>;
            };

        combo_K { 
            timeout-ms = <20>;
            key-positions = <20 31>;
            bindings = <&kp K>;
            };

        combo_prntscr { 
            timeout-ms = <20>;
            key-positions = <9 10>;
            bindings = <&kp PRINTSCREEN>;
            };

        combo_tab {
            timeout-ms = <20>;
            key-positions = <14 15>;
            bindings = <&kp TAB>;        
            };

                    
        };

        behaviors {
        td23: tap_dance23 {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE23";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp SQT>, <&kp DQT>;
                };

        mtrsh: mt_rshift_space {
                compatible = "zmk,behavior-hold-tap";
                label = "RSHIFT_HOLDTAP";
                flavor = "hold-preferred";
                #binding-cells = <2>;    
                tapping-term-ms = <200>;
                bindings = <&kp>, <&kp>;
                };

        mtmo: mt_momentary {
                compatible = "zmk,behavior-hold-tap";
                label = "MO_HOLDTAP";
                flavor = "hold-preferred";
                #binding-cells = <2>;    
                tapping-term-ms = <200>;
                bindings = <&mo>, <&kp>;
                };

        qumac: qu_macro {
		compatible = "zmk,behavior-macro";
		label = "qumacro";
                tap-ms = <0>;
                wait-ms = <0>;
		#binding-cells = <0>;
		bindings = <&kp Q &kp U>;
                };

        // mtmac: mt_macro {
        //         compatible = "zmk,behavior-hold-tap";
        //         label = "MACRO_HOLDTAP";
        //         flavor = "tap-preferred";
        //         #binding-cells = <2>;    
        //         tapping-term-ms = <200>;
        //         bindings = <&kp>, <&qumac>;
        //         };
        
        // need to make combos for J on right and G on left also wher to put sqt for typing Where to put LGUI
        // need to make combos for J on right and G on left also wher to put sqt for typing Where to put LGUI
        
        };



        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp Q         &kp W         &kp F           &kp P                                                   &kp L         &kp U              &kp Y          &kp BACKSPACE   
   &mt LC(A) A   &kp R         &kp S           &kp T            &kp B                   &kp J          &mt LCTRL N   &kp E              &kp I          &kp O      
   &mt UNDO Z    &mt CUT X     &mt COPY C      &mt PASTE D      &kp G                   &kp M          &kp H         &mt SEMI COMMA     &mt COLON DOT  &kp FSLH
                                               &mo NAV_L        &sk LSHIFT              &mtrsh RSHFT SPACE    &mo SYM_L
                        >;
                };

                nav_layer {
                        label = "Nav";
                        bindings = <
   &mt EXCL N1  &mt AT N2      &mt HASH N3     &mt DLLR N4                                            &kp HOME      &kp END         &mt LPAR N9    &mt RPAR N0 
   &none        &kp RALT       &kp LSHFT       &kp LCTRL        &none                   &kp LEFT      &kp DOWN      &kp UP              &kp RIGHT      &td23
   &trans       &trans         &trans          &trans           &trans                  &kp CLONED    &kp REML      &none               &none          &none
                          	               &trans           &trans                  &trans        &trans
                        >;
                };

                sym_layer {
                        label = "Sym";
                        bindings = <
   &kp EXCL     &kp AT         &kp HASH        &kp DLLR         &kp PRCNT               &kp CARET     &kp AMPS      &kp KP_MULTIPLY     &kp LPAR       &kp RPAR
   &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP    &kp B            &trans                  &kp MINUS     &kp EQUAL     &kp LBKT            &kp RBKT       &kp BSLH
   &trans       &trans         &trans          &kp V            &trans                  &kp UNDER     &kp PLUS      &kp LBRC            &kp RBRC       &kp PIPE
                    	                       &trans           &trans                  &trans        &trans
                        >;
                };

                bt_layer {
                        bindings = <
   &kp F1   &kp F2        &kp F3        &kp F4        &kp F5       &kp F6                &kp F7  &kp F8  &kp F9  &kp F10   &kp F11   &kp F12
   &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4          &none   &kp LC(FSLH)   &none   &none     &none     &none
   &none    &none         &none         &none         &none        &none                 &none   &none   &none   &none     &none     &none
                      &trans     &trans       &trans         &trans   &trans   &trans
                        
                        >;      
                };
        

        };
};
